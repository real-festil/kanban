{"version":3,"sources":["components/comments/commentItem/commentItem.module.css","components/cards/card/card.module.css","components/layout/layout.module.css","components/description/description.module.css","components/cards/cardControl/addCard/addCard.module.css","components/column/column.module.css","components/caption/caption.module.css","components/comments/commentCreateForm/commentCreateForm.module.css","components/modal/modal.module.css","components/login/login.module.css","components/caption/caption.js","components/description/description.js","components/comments/commentCreateForm/commentCreateForm.js","components/comments/commentItem/commentItem.js","components/modal/modal.js","components/cards/card/card.js","components/cards/cardControl/addCard/addCard.js","components/cards/cardsList.js","components/column/column.js","components/login/login.js","components/layout/layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Caption","state","labelValue","props","captionName","isLabelShowed","onInputBlurred","setState","changeInputName","inputKeyHandler","e","key","this","className","classes","autoFocus","onChange","target","value","onBlur","onKeyUp","md","onClick","Component","Description","isOpened","description","cardDesc","onDescSaved","DescriptionTextArea","Button","SaveButton","CommentCreateForm","isCommentFocus","commentText","onCommentSaved","AddComment","style","height","placeholder","onFocus","CommentItem","isCommentChanging","onCommentSave","onCommentChange","onCommentDelete","username","Comment","CommentText","CommentTextChange","defaultValue","CommentControl","modal","colName","changeCardName","onDescUndo","comments","show","onHide","cardName","Modal","size","aria-labelledby","centered","Header","closeButton","Title","id","SubHeading","Body","map","comment","index","newValue","Footer","onCardDelete","Card","isModalShowed","onModalToggle","type","CardName","CardComments","src","alt","length","clicked","changeDesc","AddCard","isCardFormOpened","onCardAdded","onCardFormClosed","AddCardControl","ButtonWrapper","cardsList","cards","card","name","cardNameValue","filter","cardId","column","changeColumnName","Container","Column","Col","Row","Login","usernameChanged","onLogin","alert","ModalBody","Layout","initialState","columnsList","isLoginShow","JSON","parse","localStorage","getItem","prevState","setItem","stringify","uuidv4","colId","changeCardData","data","filteredCards","xs","sm","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.18066867.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Comment\":\"commentItem_Comment__1rxLZ\",\"CommentText\":\"commentItem_CommentText__UIyKI\",\"CommentTextChange\":\"commentItem_CommentTextChange__2YYL8\",\"CommentControl\":\"commentItem_CommentControl__2EQK3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"card_Card__VrAYX\",\"CardName\":\"card_CardName__2bQYP\",\"CardComments\":\"card_CardComments__MH0xe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"layout_Layout__zSyIR\",\"Header\":\"layout_Header__X-0FB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DescriptionTextArea\":\"description_DescriptionTextArea__11H08\",\"SaveButton\":\"description_SaveButton__dcLnU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddCardControl\":\"addCard_AddCardControl__14dB_\",\"ButtonWrapper\":\"addCard_ButtonWrapper__3Uhw0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Column\":\"column_Column__2HWaQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Caption\":\"caption_Caption__10JVT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddComment\":\"commentCreateForm_AddComment__XqS7s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SubHeading\":\"modal_SubHeading__1GAYN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalBody\":\"login_ModalBody__1Ouss\"};","import React, { Component } from \"react\";\nimport classes from \"./caption.module.css\";\n\nclass Caption extends Component {\n  state = {\n    labelValue: this.props.captionName,\n    isLabelShowed: false\n  };\n\n  onInputBlurred = () => {\n    const { labelValue } = this.state;\n    const { captionName } = this.props;\n\n    this.setState({ isLabelShowed: false });\n    if (!labelValue) this.setState({ labelValue: captionName });\n\n    this.props.changeInputName(labelValue ? labelValue : captionName);\n  };\n\n  inputKeyHandler = e => {\n    if (e.key === \"Enter\" || e.key === \"Escape\") {\n      this.setState({ isLabelShowed: false });\n      this.onInputBlurred();\n    }\n  };\n\n  render() {\n    const { isLabelShowed, labelValue } = this.state;\n\n    return (\n      <div className={classes.Caption}>\n        {isLabelShowed ? (\n          <input\n            autoFocus\n            onChange={e => this.setState({ labelValue: e.target.value })}\n            onBlur={this.onInputBlurred}\n            onKeyUp={this.inputKeyHandler}\n            value={labelValue}\n          />\n        ) : (\n          <h5 md={4} onClick={() => this.setState({ isLabelShowed: true })}>\n            {labelValue}\n          </h5>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Caption;\n","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport classes from \"./description.module.css\";\n\nclass Description extends Component {\n  state = {\n    isOpened: false,\n    description: this.props.cardDesc\n  };\n\n  onDescSaved = value => {\n    this.setState({ isOpened: false }, () => this.props.onDescSaved(value));\n  };\n\n  render() {\n    const { isOpened, description } = this.state;\n\n    return (\n      <>\n        <b>Описание</b>\n        {isOpened ? (\n          <div>\n            <textarea\n              autoFocus\n              onChange={e => this.setState({ description: e.target.value })}\n              value={description}\n              className={classes.DescriptionTextArea}\n            />\n            <Button\n              className={classes.SaveButton}\n              onClick={() => this.onDescSaved(description)}\n            >\n              Сохранить\n            </Button>\n            <Button\n              className=\"btn btn-secondary\"\n              onClick={() =>\n                this.setState({\n                  isOpened: false,\n                  description: this.props.cardDesc\n                })\n              }\n            >\n              Отменить\n            </Button>\n          </div>\n        ) : (\n          <p onClick={() => this.setState({ isOpened: true })}>\n            {description || \"Введите описание\"}\n          </p>\n        )}\n      </>\n    );\n  }\n}\n\nexport default Description;\n","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport classes from \"./commentCreateForm.module.css\";\n\nclass CommentCreateForm extends Component {\n  state = {\n    isCommentFocus: false,\n    commentText: \"\"\n  };\n\n  onCommentSaved = e => {\n    this.props.onCommentSaved(this.state.commentText);\n    this.setState({ isCommentFocus: false, commentText: \"\" });\n  };\n\n  render() {\n    const { isCommentFocus, commentText } = this.state;\n\n    return (\n      <>\n        <b>Комментарии</b>\n        <div\n          className={classes.AddComment}\n          style={{ height: isCommentFocus ? \"150px\" : \"50px\" }}\n          onChange={e =>\n            e.target.value\n              ? this.setState({ isCommentFocus: true })\n              : this.setState({ isCommentFocus: false })\n          }\n        >\n          <textarea\n            placeholder=\"Напишите комментарий...\"\n            value={commentText}\n            onChange={e => this.setState({ commentText: e.target.value })}\n          />\n          {isCommentFocus && (\n            <Button\n              className=\"btn btn-success\"\n              onClick={this.onCommentSaved}\n              onFocus={() => this.setState({ isCommentFocus: true })}\n            >\n              Сохранить\n            </Button>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default CommentCreateForm;\n","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport classes from \"./commentItem.module.css\";\n\nclass CommentItem extends Component {\n  state = {\n    isCommentChanging: false,\n    commentText: this.props.commentText\n  };\n\n  onCommentSave = () => {\n    this.setState({ isCommentChanging: false }, () =>\n      this.props.onCommentChange(this.state.commentText)\n    );\n  };\n\n  onCommentChange = e => {\n    this.setState({ isCommentChanging: true, commentText: e.target.value });\n  };\n\n  render() {\n    const { onCommentDelete, username, commentText } = this.props;\n\n    const { isCommentChanging } = this.state;\n\n    return (\n      <div className={classes.Comment}>\n        <b>{username}</b>\n        <div className={classes.CommentText}>\n          {isCommentChanging ? (\n            <>\n              <div className={classes.CommentTextChange}>\n                <textarea\n                  autoFocus\n                  defaultValue={commentText}\n                  onChange={this.onCommentChange}\n                />\n              </div>\n              <Button className=\"btn btn-success\" onClick={this.onCommentSave}>\n                Сохранить\n              </Button>\n            </>\n          ) : (\n            <p>{commentText}</p>\n          )}\n        </div>\n        <div className={classes.CommentControl}>\n          <p onClick={this.onCommentChange}>Изменить</p>\n          <p onClick={onCommentDelete}>Удалить</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CommentItem;\n","import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Caption from \"../caption/caption\";\nimport Description from \"../description/description\";\nimport CommentCreateForm from \"../comments/commentCreateForm/commentCreateForm\";\nimport CommentItem from \"../comments/commentItem/commentItem\";\nimport classes from \"./modal.module.css\";\n\nconst modal = props => {\n  const onDelete = () => {\n    const { onCardDelete, onHide } = props;\n\n    onCardDelete();\n    onHide();\n  };\n\n  const {\n    colName,\n    changeCardName,\n    onDescSaved,\n    onDescUndo,\n    onCommentSaved,\n    comments,\n    onCommentChange,\n    onCommentDelete,\n    username,\n    show,\n    onHide,\n    cardName,\n    cardDesc\n  } = props;\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          <Caption captionName={cardName} changeInputName={changeCardName} />\n          <p className={classes.SubHeading}>в колонке {colName}</p>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Description\n          cardDesc={cardDesc}\n          onDescSaved={onDescSaved}\n          onDescUndo={onDescUndo}\n        />\n      </Modal.Body>\n      <Modal.Body>\n        <CommentCreateForm onCommentSaved={onCommentSaved} />\n        {comments.map((comment, index) => {\n          const { id, value } = comment;\n\n          return (\n            <CommentItem\n              key={index}\n              onCommentChange={newValue => onCommentChange(newValue, id)}\n              commentText={value}\n              onCommentDelete={() => onCommentDelete(id)}\n              username={username}\n            />\n          );\n        })}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button className=\"btn btn-danger\" onClick={onDelete}>\n          Удалить\n        </Button>\n        <Button onClick={onHide}>Закрыть</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default modal;\n","import React, { Component } from \"react\";\nimport Modal from \"../../modal/modal\";\nimport classes from \"./card.module.css\";\n\nclass Card extends Component {\n  state = {\n    isModalShowed: false\n  };\n\n  onModalToggle = () =>\n    this.setState({ isModalShowed: !this.state.isModalShowed });\n\n  render() {\n    const {\n      colName,\n      changeCardName,\n      onCardDelete,\n      onDescSaved,\n      onCommentSaved,\n      comments,\n      onCommentChange,\n      onCommentDelete,\n      username,\n      cardName,\n      cardDesc\n    } = this.props;\n    const { isModalShowed } = this.state;\n\n    return (\n      <>\n        <div\n          className={classes.Card}\n          onClick={this.onModalToggle}\n          type=\"button\"\n        >\n          <div className={classes.CardName}>\n            <p>{cardName}</p>\n          </div>\n          <div className={classes.CardComments}>\n            <img\n              src=\"https://image.flaticon.com/icons/svg/1946/1946412.svg\"\n              alt=\"\"\n            />\n            <p>{comments.length}</p>\n          </div>\n        </div>\n        <Modal\n          cardDesc={cardDesc}\n          onDescSaved={onDescSaved}\n          onCardDelete={onCardDelete}\n          clicked={this.changeDesc}\n          show={isModalShowed}\n          onHide={this.onModalToggle}\n          cardName={cardName}\n          colName={colName}\n          changeCardName={changeCardName}\n          onCommentSaved={onCommentSaved}\n          onCommentChange={onCommentChange}\n          onCommentDelete={onCommentDelete}\n          comments={comments}\n          username={username}\n        />\n      </>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport classes from \"./addCard.module.css\";\n\nclass AddCard extends Component {\n  state = {\n    cardName: \"\",\n    isCardFormOpened: false\n  };\n\n  onCardAdded = () => {\n    this.props.onCardAdded(this.state.cardName);\n    this.onCardFormClosed();\n  };\n\n  onCardFormClosed = () =>\n    this.setState({ cardName: \"\", isCardFormOpened: false });\n\n  inputKeyHandler = e => {\n    if (e.key === \"Enter\") this.onCardAdded();\n    if (e.key === \"Escape\") this.onCardFormClosed();\n  };\n\n  render() {\n    const { isCardFormOpened, cardName } = this.state;\n\n    return (\n      <>\n        {isCardFormOpened ? (\n          <div className={classes.AddCardControl}>\n            <input\n              autoFocus\n              onChange={e => this.setState({ cardName: e.target.value })}\n              value={cardName}\n              onKeyUp={this.inputKeyHandler}\n              placeholder=\"Введите заголовок\"\n            />\n            <button\n              type=\"button\"\n              className=\"btn btn-success\"\n              onClick={this.onCardAdded}\n            >\n              Добавить\n            </button>\n            <button\n              onClick={this.onCardFormClosed}\n              type=\"button\"\n              className=\"btn btn-secondary\"\n            >\n              Отмена\n            </button>\n          </div>\n        ) : (\n          <div className={classes.ButtonWrapper}>\n            <button\n              type=\"button\"\n              onClick={() => this.setState({ isCardFormOpened: true })}\n              className=\"btn btn-outline-primary\"\n            >\n              Добавить карточку\n            </button>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default AddCard;\n","import React from \"react\";\nimport Card from \"./card/card\";\nimport AddCard from \"./cardControl/addCard/addCard\";\n\nconst cardsList = props => {\n  const {\n    colName,\n    cards,\n    changeCardName,\n    onCardAdded,\n    onCardDelete,\n    onDescSaved,\n    onCommentSaved,\n    comments,\n    onCommentChange,\n    onCommentDelete,\n    username\n  } = props;\n\n  return (\n    <>\n      {cards.map((card, index) => {\n        const { name, id, cardDesc } = card;\n\n        return (\n          <div key={index}>\n            <Card\n              index={id}\n              cardNameValue={name}\n              onCardDelete={() => onCardDelete(id)}\n              cardName={name}\n              colName={colName}\n              changeCardName={value => changeCardName(value, id)}\n              cardDesc={cardDesc}\n              onDescSaved={value => onDescSaved(value, id)}\n              onCommentSaved={value => onCommentSaved(value, id)}\n              comments={comments.filter(comment => comment.cardId === id)}\n              onCommentChange={onCommentChange}\n              onCommentDelete={onCommentDelete}\n              username={username}\n            />\n          </div>\n        );\n      })}\n      <AddCard cards={cards} colName={colName} onCardAdded={onCardAdded} />\n    </>\n  );\n};\n\nexport default cardsList;\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport classes from \"./column.module.css\";\r\nimport CardsList from \"../cards/cardsList\";\r\nimport Caption from \"../caption/caption\";\r\n\r\nconst column = props => {\r\n  const {\r\n    colName,\r\n    cards,\r\n    changeCardName,\r\n    changeColumnName,\r\n    onCardAdded,\r\n    onCardDelete,\r\n    onDescSaved,\r\n    onCommentSaved,\r\n    comments,\r\n    onCommentChange,\r\n    onCommentDelete,\r\n    username\r\n  } = props;\r\n\r\n  return (\r\n    <Container className={classes.Column}>\r\n      <Col>\r\n        <Row>\r\n          <Caption captionName={colName} changeInputName={changeColumnName} />\r\n        </Row>\r\n        <Row>\r\n          <Container>\r\n            <CardsList\r\n              colName={colName}\r\n              cards={cards}\r\n              changeCardName={changeCardName}\r\n              onCardAdded={onCardAdded}\r\n              onCardDelete={onCardDelete}\r\n              onDescSaved={onDescSaved}\r\n              onCommentSaved={onCommentSaved}\r\n              comments={comments}\r\n              onCommentChange={onCommentChange}\r\n              onCommentDelete={onCommentDelete}\r\n              username={username}\r\n            />\r\n          </Container>\r\n        </Row>\r\n      </Col>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default column;\r\n","import React, { Component } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport classes from \"./login.module.css\";\n\nclass Login extends Component {\n  state = {\n    username: \"\"\n  };\n\n  usernameChanged = e => {\n    this.setState({ username: e.target.value });\n  };\n\n  onLogin = () => {\n    const { username } = this.state;\n\n    if (!username) alert(\"Введите имя пользователя\");\n    else this.props.onHide(username);\n  };\n\n  render() {\n    return (\n      <Modal\n        {...this.props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header>\n          <Modal.Title id=\"contained-modal-title-vcenter\">Вход</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className={classes.ModalBody}>\n          <p>Имя пользователя: </p>\n          <input\n            placeholder=\"username\"\n            value={this.state.username}\n            onChange={this.usernameChanged}\n          ></input>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.onLogin}>Войти</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport classes from \"./layout.module.css\";\r\nimport Column from \"../column/column\";\r\nimport Login from \"../login/login\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nclass Layout extends Component {\r\n  initialState = {\r\n    columnsList: [\r\n      { id: 0, name: \"ToDo\" },\r\n      { id: 1, name: \"InProgress\" },\r\n      { id: 2, name: \"Testing\" },\r\n      { id: 3, name: \"Done\" }\r\n    ],\r\n    username: \"\",\r\n    cards: [],\r\n    comments: [],\r\n    isLoginShow: false\r\n  };\r\n\r\n  state = JSON.parse(localStorage.getItem(\"state\")) || this.initialState;\r\n\r\n  componentDidMount() {\r\n    if (!this.state.username)\r\n      this.setState({ isLoginShow: true }, () =>\r\n        localStorage.setItem(\"state\", JSON.stringify(this.state))\r\n      );\r\n  }\r\n\r\n  changeColumnName = (value, id) => {\r\n    this.setState(\r\n      prevState => ({\r\n        columnsList: prevState.columnsList.map(column =>\r\n          column.id === id ? { ...column, name: value } : column\r\n        )\r\n      }),\r\n      () => localStorage.setItem(\"state\", JSON.stringify(this.state))\r\n    );\r\n  };\r\n\r\n  onCardAdded = (value, id) => {\r\n    const { cards } = this.state;\r\n\r\n    if (value === \"\") {\r\n      alert(\"Введите заголовок\");\r\n    } else {\r\n      this.setState(\r\n        {\r\n          cards: [\r\n            ...cards,\r\n            {\r\n              id: uuidv4(),\r\n              colId: id,\r\n              name: value,\r\n              comments: 0,\r\n              cardDesc: \"\"\r\n            }\r\n          ]\r\n        },\r\n        () => localStorage.setItem(\"state\", JSON.stringify(this.state))\r\n      );\r\n    }\r\n  };\r\n\r\n  onCardDelete = cardId => {\r\n    this.setState(\r\n      prevState => ({\r\n        cards: prevState.cards.filter(card => card.id !== cardId)\r\n      }),\r\n      () => localStorage.setItem(\"state\", JSON.stringify(this.state))\r\n    );\r\n  };\r\n\r\n  changeCardData = (data, cardId) => {\r\n    this.setState(\r\n      prevState => ({\r\n        cards: prevState.cards.map(card =>\r\n          card.id === cardId ? { ...card, ...data } : card\r\n        )\r\n      }),\r\n      () => localStorage.setItem(\"state\", JSON.stringify(this.state))\r\n    );\r\n  };\r\n\r\n  onCommentSaved = (value, cardId) => {\r\n    const { comments, username } = this.state;\r\n\r\n    this.setState(\r\n      {\r\n        comments: [\r\n          ...comments,\r\n          {\r\n            id: uuidv4(),\r\n            cardId,\r\n            value,\r\n            username\r\n          }\r\n        ]\r\n      },\r\n      () => localStorage.setItem(\"state\", JSON.stringify(this.state))\r\n    );\r\n  };\r\n\r\n  onCommentChange = (newValue, id) => {\r\n    this.setState(\r\n      prevState => ({\r\n        comments: prevState.comments.map(comment =>\r\n          comment.id === id\r\n            ? { ...comment, value: newValue ? newValue : comment.value }\r\n            : comment\r\n        )\r\n      }),\r\n      () => localStorage.setItem(\"state\", JSON.stringify(this.state))\r\n    );\r\n  };\r\n\r\n  onCommentDelete = id => {\r\n    this.setState(\r\n      prevState => ({\r\n        comments: prevState.comments.filter(comment => comment.id !== id)\r\n      }),\r\n      () => localStorage.setItem(\"state\", JSON.stringify(this.state))\r\n    );\r\n  };\r\n\r\n  onHide = username => {\r\n    this.setState({ username: username, isLoginShow: false }, () =>\r\n      localStorage.setItem(\"state\", JSON.stringify(this.state))\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { columnsList, isLoginShow } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <Container className={classes.Layout}>\r\n          <Row className={classes.Header}>\r\n            <Col md={12}>\r\n              <h1 className=\"text-center\">Trello</h1>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            {columnsList.map(column => {\r\n              const { cards, comments, username } = this.state;\r\n              const filteredCards = cards.filter(\r\n                card => card.colId === column.id\r\n              );\r\n\r\n              return (\r\n                <Col xs={6} sm={3} md={3} key={column.id}>\r\n                  <Column\r\n                    colName={column.name}\r\n                    onCardAdded={value => this.onCardAdded(value, column.id)}\r\n                    onCardDelete={this.onCardDelete}\r\n                    changeCardName={(value, cardId) =>\r\n                      this.changeCardData({ name: value }, cardId)\r\n                    }\r\n                    changeColumnName={value =>\r\n                      this.changeColumnName(value, column.id)\r\n                    }\r\n                    cards={filteredCards}\r\n                    onDescSaved={(value, cardId) =>\r\n                      this.changeCardData({ cardDesc: value }, cardId)\r\n                    }\r\n                    onCommentSaved={this.onCommentSaved}\r\n                    comments={comments}\r\n                    onCommentChange={this.onCommentChange}\r\n                    onCommentDelete={this.onCommentDelete}\r\n                    username={username}\r\n                  />\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n        <Login show={isLoginShow} onHide={this.onHide} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Layout from \"./components/layout/layout\";\nimport \"./App.css\";\n\nfunction App() {\n  return <Layout />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}