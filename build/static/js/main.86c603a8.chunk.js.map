{"version":3,"sources":["components/card/comment/comment.module.css","components/modal/modal.module.css","components/layout/layout.module.css","components/columns/column.module.css","components/card/card.module.css","components/card/comment/comment.js","components/modal/modal.js","components/card/card.js","components/columns/column.js","components/columns/ToDo/todo.js","components/columns/inProgress/inProgress.js","components/columns/testing/testing.js","components/columns/done/done.js","components/login/login.js","components/layout/layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Comment","state","isCommentChanging","commentText","props","commentChangeRef","React","createRef","onCommentChange","ref","setState","setTimeout","current","focus","onCommentTextChange","e","target","value","onCommentSaved","onCommentTextChanged","className","classes","this","username","CommentText","style","display","CommentTextChange","defaultValue","onChange","Button","onClick","CommentControl","onCommentDelete","Component","ModalComponent","isNameInputFocused","isDescFocused","isCommentChanged","textarea","commentsCount","comments","nameInput","JSON","parse","localStorage","getItem","colName","cardName","index","length","Modal","show","onHide","size","aria-labelledby","centered","Header","closeButton","Title","id","cursor","cardNameChanged","cardNameValue","onFocus","focused","onBlur","blurred","position","top","marginLeft","width","border","fontSize","fontWeight","padding","marginBottom","lineHeight","zIndex","SubHeading","Body","cardDesc","height","resize","marginRight","onDescSaved","onDescUndo","AddComment","placeholder","unshift","commentAuthor","setItem","stringify","map","comment","key","findIndex","obj","filter","console","log","Footer","onDelete","Card","isModalShowed","onModalShowed","type","src","alt","clicked","changeDesc","Column","isHeadingInputFocused","isCardInputFocused","cards","cardsCount","headingInput","cardInput","defaultCardName","inputChangeHandler","inputKeyHandler","blur","inputBlurHandler","inputFocusHandler","card","name","removeItem","cardIndex","cardNameInputBlurred","cardNameInputFocused","addCard","alert","push","Container","Col","Row","md","marginTop","overflowWrap","onKeyPress","todo","inProgress","testing","done","Login","usernameChanged","onLogin","alignItems","margin","Layout","isLoginShow","xs","sm","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.86c603a8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Comment\":\"comment_Comment__X6k4r\",\"CommentText\":\"comment_CommentText__2g1-l\",\"CommentTextChange\":\"comment_CommentTextChange__O1r-G\",\"CommentControl\":\"comment_CommentControl__OEj2f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SubHeading\":\"modal_SubHeading__1GAYN\",\"AddComment\":\"modal_AddComment__3WBPF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"layout_Layout__zSyIR\",\"Header\":\"layout_Header__X-0FB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Column\":\"column_Column__1P_Np\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"card_Card__1juVq\"};","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport classes from \"./comment.module.css\";\n\nclass Comment extends Component {\n  state = {\n    isCommentChanging: false,\n    commentText: this.props.commentText\n  };\n\n  commentChangeRef = React.createRef();\n\n  onCommentChange = ref => {\n    this.setState({ isCommentChanging: true });\n    setTimeout(() => ref.current.focus(), 0);\n  };\n\n  onCommentTextChange = e => {\n    this.setState({ commentText: e.target.value });\n  };\n\n  onCommentSaved = () => {\n    this.setState({ isCommentChanging: false });\n    setTimeout(\n      () => this.props.onCommentTextChanged(this.state.commentText),\n      0\n    );\n  };\n\n  render() {\n    return (\n      <div className={classes.Comment}>\n        <b>{this.props.username}</b>\n        <div className={classes.CommentText}>\n          <p\n            style={{ display: this.state.isCommentChanging ? \"none\" : \"block\" }}\n          >\n            {this.state.commentText}\n          </p>\n          <div className={classes.CommentTextChange}>\n            <textarea\n              defaultValue={this.state.commentText}\n              ref={this.commentChangeRef}\n              onChange={this.onCommentTextChange}\n              style={{\n                display: this.state.isCommentChanging ? \"block\" : \"none\"\n              }}\n            />\n          </div>\n          <Button\n            className=\"btn btn-success\"\n            onClick={this.onCommentSaved}\n            style={{\n              display: this.state.isCommentChanging ? \"block\" : \"none\"\n            }}\n          >\n            Сохранить\n          </Button>\n        </div>\n        <div className={classes.CommentControl}>\n          <p onClick={() => this.onCommentChange(this.commentChangeRef)}>\n            Изменить\n          </p>\n          <p onClick={this.props.onCommentDelete}>Удалить</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Comment;\n","import React, { Component } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Comment from \"../card/comment/comment\";\nimport classes from \"./modal.module.css\";\n\nclass ModalComponent extends Component {\n  state = {\n    isNameInputFocused: false,\n    isDescFocused: false,\n    isCommentChanged: false,\n    textarea: \"\",\n    commentText: \"\",\n    commentsCount: 0,\n    comments: []\n  };\n\n  componentDidMount() {\n    this.setState({\n      commentsCount:\n        JSON.parse(\n          localStorage.getItem(\n            this.props.colName +\n              \" \" +\n              this.props.cardName +\n              \" \" +\n              this.props.index +\n              \" commentsCount\"\n          )\n        ) + 1 || 0,\n      comments:\n        JSON.parse(\n          localStorage.getItem(\n            this.props.colName +\n              \" \" +\n              this.props.cardName +\n              \" \" +\n              this.props.index +\n              \" comments\"\n          )\n        ) || []\n    });\n    setTimeout(() => this.props.commentsCount(this.state.comments.length), 0);\n  }\n\n  nameInput = React.createRef();\n\n  render() {\n    const onDelete = () => {\n      this.props.onDelete();\n      this.props.onHide();\n    };\n\n    const changeCardName = () => {\n      this.setState({ isNameInputFocused: true });\n      this.nameInput.current.focus();\n    };\n\n    const onBlurred = () => {\n      this.setState({ isNameInputFocused: false });\n      this.props.blurred();\n    };\n\n    const onDescFocused = () => {\n      this.setState({ isDescFocused: true });\n    };\n\n    const textAreaChange = e => {\n      this.setState({ textarea: e.target.value });\n    };\n\n    const onDescSaved = () => {\n      this.setState({ isDescFocused: false });\n      this.props.onDescSaved(this.state.textarea);\n    };\n\n    const onDescUndo = () => {\n      this.setState({ isDescFocused: false });\n      this.props.onDescUndo();\n    };\n\n    const onCommentChanged = e => {\n      if (e.target.value !== \"\") {\n        this.setState({ isCommentChanged: true, commentText: e.target.value });\n      } else this.setState({ isCommentChanged: false });\n    };\n\n    const onCommentSaved = () => {\n      let commentsCount = this.state.commentsCount + 1;\n      let comments = this.state.comments;\n      comments.unshift({\n        index: commentsCount,\n        commentText: this.state.commentText,\n        commentAuthor: this.props.username\n      });\n      this.setState({\n        comments: comments,\n        commentsCount: commentsCount,\n        isCommentChanged: false,\n        commentText: \"\"\n      });\n      localStorage.setItem(\n        this.props.colName +\n          \" \" +\n          this.props.cardName +\n          \" \" +\n          this.props.index +\n          \" comments\",\n        JSON.stringify(this.state.comments)\n      );\n      localStorage.setItem(\n        this.props.colName +\n          \" \" +\n          this.props.cardName +\n          \" \" +\n          this.props.index +\n          \" commentsCount\",\n        this.state.commentsCount\n      );\n      setTimeout(() => this.props.commentsCount(this.state.comments.length), 0);\n    };\n\n    const onCommentDelete = key => {\n      let comments = this.state.comments;\n      comments = comments.filter(comment => comment.index !== key);\n      this.setState({ comments: comments });\n      console.log(this.state.comments);\n      setTimeout(\n        () =>\n          localStorage.setItem(\n            this.props.colName +\n              \" \" +\n              this.props.cardName +\n              \" \" +\n              this.props.index +\n              \" comments\",\n            JSON.stringify(this.state.comments)\n          ),\n        0\n      );\n      setTimeout(() => this.props.commentsCount(this.state.comments.length), 0);\n    };\n\n    const onCommentTextChanged = (key, commentText) => {\n      let comments = this.state.comments;\n      comments[\n        comments.findIndex(obj => obj.index === key)\n      ].commentText = commentText;\n      this.setState({ comments: comments });\n      setTimeout(\n        () =>\n          localStorage.setItem(\n            this.props.colName +\n              \" \" +\n              this.props.cardName +\n              \" \" +\n              this.props.index +\n              \" comments\",\n            JSON.stringify(this.state.comments)\n          ),\n        0\n      );\n    };\n\n    return (\n      <Modal\n        show={this.props.show}\n        onHide={this.props.onHide}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            <p\n              style={{\n                display: this.state.isNameInputFocused ? \"none\" : \"block\",\n                cursor: \"pointer\"\n              }}\n              onClick={changeCardName}\n            >\n              {this.props.cardName}\n            </p>\n            <input\n              onChange={this.props.cardNameChanged}\n              value={this.props.cardNameValue}\n              ref={this.nameInput}\n              onFocus={this.props.focused}\n              onBlur={onBlurred}\n              style={{\n                position: this.state.isNameInputFocused ? \"static\" : \"absolute\",\n                top: \"3%\",\n                marginLeft: \"-1px\",\n                width: \"90%\",\n                border: \"1px solid #0079bf\",\n                fontSize: \"24px\",\n                fontWeight: \"500\",\n                padding: \"1px 0\",\n                marginBottom: \"18px\",\n                lineHeight: \"1.2\",\n                zIndex: this.state.isNameInputFocused ? \"1\" : \"-1\"\n              }}\n            />\n            <p className={classes.SubHeading}>в колонке {this.props.colName}</p>\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <b>Описание</b>\n          <p\n            onClick={onDescFocused}\n            style={{\n              display: this.state.isDescFocused ? \"none\" : \"block\",\n              cursor: \"pointer\"\n            }}\n          >\n            {this.props.cardDesc}\n          </p>\n          <div\n            style={{\n              display: this.state.isDescFocused ? \"block\" : \"none\"\n            }}\n          >\n            <textarea\n              onChange={textAreaChange}\n              defaultValue={this.props.cardDesc}\n              style={{\n                width: \"100%\",\n                height: \"100px\",\n                resize: \"none\"\n              }}\n            />\n            <Button style={{ marginRight: \"20px\" }} onClick={onDescSaved}>\n              Сохранить\n            </Button>\n            <Button className=\"btn btn-secondary\" onClick={onDescUndo}>\n              Отменить\n            </Button>\n          </div>\n        </Modal.Body>\n        <Modal.Body>\n          <b>Комментарии</b>\n          <div\n            className={classes.AddComment}\n            style={{ height: this.state.isCommentChanged ? \"150px\" : \"50px\" }}\n          >\n            <textarea\n              placeholder=\"Напишите комментарий...\"\n              value={this.state.commentText}\n              onChange={onCommentChanged}\n            />\n            <Button\n              className=\"btn btn-success\"\n              onClick={onCommentSaved}\n              style={{\n                display: this.state.isCommentChanged ? \"block\" : \"none\"\n              }}\n            >\n              Сохранить\n            </Button>\n          </div>\n          <div className={classes.Comment}>\n            {this.state.comments.map(comment => (\n              <Comment\n                key={comment.index}\n                onCommentTextChanged={commentText =>\n                  onCommentTextChanged(comment.index, commentText)\n                }\n                commentText={comment.commentText}\n                onCommentDelete={() => onCommentDelete(comment.index)}\n                username={comment.commentAuthor}\n              />\n            ))}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button className=\"btn btn-danger\" onClick={onDelete}>\n            Удалить\n          </Button>\n          <Button onClick={this.props.onHide}>Закрыть</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default ModalComponent;\n","import React, { Component } from \"react\";\nimport Modal from \"../modal/modal\";\nimport classes from \"./card.module.css\";\n\nclass Card extends Component {\n  state = {\n    isModalShowed: false,\n    commentsCount: 0,\n    cardDesc: \"Добавьте описание\",\n    username: \"\"\n  };\n\n  componentDidMount() {\n    this.setState({\n      cardDesc:\n        localStorage.getItem(\n          this.props.colName +\n            \" \" +\n            this.props.cardName +\n            \" \" +\n            this.props.index +\n            \" desc\"\n        ) || \"Добавьте описание\",\n      username: localStorage.getItem(\"username\")\n    });\n  }\n\n  onModalShowed = () => {\n    this.setState({ isModalShowed: !this.state.isModalShowed });\n    console.log(this.props.index);\n  };\n\n  onDescSaved = textarea => {\n    if (textarea !== \"\") {\n      this.setState({ cardDesc: textarea });\n      setTimeout(\n        () =>\n          localStorage.setItem(\n            this.props.colName +\n              \" \" +\n              this.props.cardName +\n              \" \" +\n              this.props.index +\n              \" desc\",\n            this.state.cardDesc\n          ),\n        0\n      );\n    } else this.setState({ cardDesc: \"Добавьте описание\" });\n  };\n\n  onDescUndo = () => {\n    this.setState({\n      cardDesc:\n        localStorage.getItem(\n          this.props.colName +\n            \" \" +\n            this.props.cardName +\n            \" \" +\n            this.props.index +\n            \" desc\"\n        ) || \"Добавьте описание\"\n    });\n  };\n\n  render() {\n    return (\n      <>\n        <div\n          className={classes.Card}\n          onClick={this.onModalShowed}\n          type=\"button\"\n        >\n          <p>{this.props.cardName}</p>\n          <div style={{ display: \"flex\", width: \"15%\" }}>\n            <img\n              style={{ width: \"50%\", marginRight: \"5px\" }}\n              src=\"https://image.flaticon.com/icons/svg/1946/1946412.svg\"\n              alt=\"\"\n            />\n            <p>{this.state.commentsCount}</p>\n          </div>\n        </div>\n        <Modal\n          onDescSaved={textarea => this.onDescSaved(textarea)}\n          commentsCount={commentsCount =>\n            this.setState({ commentsCount: commentsCount })\n          }\n          cardNameValue={this.props.cardNameValue}\n          focused={this.props.focused}\n          blurred={this.props.blurred}\n          username={this.state.username}\n          onDelete={this.props.onDelete}\n          onDescUndo={this.onDescUndo}\n          cardDesc={this.state.cardDesc}\n          index={this.props.index}\n          clicked={this.changeDesc}\n          show={this.state.isModalShowed}\n          onHide={this.onModalShowed}\n          cardName={this.props.cardName}\n          colName={this.props.colName}\n          cardNameChanged={this.props.cardNameChanged}\n        />\n      </>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport classes from \"./column.module.css\";\r\nimport Card from \"../card/card\";\r\n\r\nclass Column extends Component {\r\n  state = {\r\n    username: \"\",\r\n    colName: this.props.colName,\r\n    cardName: \"\",\r\n    isHeadingInputFocused: false,\r\n    isCardInputFocused: false,\r\n    cards: [],\r\n    cardsCount: 0\r\n  };\r\n\r\n  headingInput = React.createRef();\r\n  cardInput = React.createRef();\r\n\r\n  cards = [];\r\n  defaultCardName = \"\";\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      username: localStorage.getItem(\"username\"),\r\n      colName: localStorage.getItem(this.props.colName) || this.props.colName,\r\n      cards:\r\n        JSON.parse(localStorage.getItem(this.props.colName + \" Cards\")) || [],\r\n      cardsCount: JSON.parse(\r\n        localStorage.getItem(this.props.colName + \" count\")\r\n      )\r\n    });\r\n    setTimeout(() => (this.cards = this.state.cards), 0);\r\n  }\r\n\r\n  inputChangeHandler = (e, ref) => {\r\n    switch (ref) {\r\n      case this.headingInput:\r\n        this.setState({ colName: e.target.value });\r\n        break;\r\n      case this.cardInput:\r\n        this.setState({ cardName: e.target.value });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  inputKeyHandler = e => {\r\n    if (e.key === \"Enter\" || e.key === \"Escape\") {\r\n      this.headingInput.current.blur();\r\n    }\r\n  };\r\n\r\n  inputBlurHandler = ref => {\r\n    switch (ref) {\r\n      case this.headingInput:\r\n        if (this.state.colName === \"\")\r\n          this.setState({ colName: this.props.colName });\r\n        this.setState({ isHeadingInputFocused: false });\r\n        localStorage.setItem(this.props.colName, this.state.colName);\r\n        break;\r\n      case this.cardInput:\r\n        this.setState({ isCardInputFocused: false });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  inputFocusHandler = ref => {\r\n    ref.current.focus();\r\n    switch (ref) {\r\n      case this.headingInput:\r\n        this.setState({\r\n          isHeadingInputFocused: true,\r\n          isCardInputFocused: false\r\n        });\r\n        break;\r\n      case this.cardInput:\r\n        this.setState({ isCardInputFocused: true });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  onDelete = cardName => {\r\n    let cards = this.state.cards;\r\n    cards = cards.filter(card => cardName !== card.name);\r\n    if (cards.length === 0) {\r\n      this.setState({ cards: [] });\r\n      localStorage.removeItem(this.state.colName + \" Cards\");\r\n    } else {\r\n      this.setState({ cards: cards });\r\n      setTimeout(() =>\r\n        localStorage.setItem(\r\n          this.state.colName + \" Cards\",\r\n          JSON.stringify(this.state.cards),\r\n          0\r\n        )\r\n      );\r\n    }\r\n    setTimeout(() => (this.cards = this.state.cards), 0);\r\n  };\r\n\r\n  cardNameChanged = (e, cardIndex) => {\r\n    const cards = this.state.cards;\r\n    cards[this.state.cards.findIndex(obj => obj.index === cardIndex)].name =\r\n      e.target.value;\r\n    this.setState({ cards: cards });\r\n  };\r\n\r\n  cardNameInputBlurred = cardIndex => {\r\n    if (\r\n      this.state.cards[\r\n        this.state.cards.findIndex(obj => obj.index === cardIndex)\r\n      ].name === \"\"\r\n    ) {\r\n      this.cards[\r\n        this.state.cards.findIndex(obj => obj.index === cardIndex)\r\n      ].name = this.defaultCardName;\r\n      this.setState({ cards: this.cards });\r\n      setTimeout(\r\n        () =>\r\n          localStorage.setItem(\r\n            this.colName + \" Cards\",\r\n            JSON.stringify(this.state.cards)\r\n          ),\r\n        0\r\n      );\r\n    } else {\r\n      setTimeout(\r\n        () =>\r\n          localStorage.setItem(\r\n            this.props.colName + \" Cards\",\r\n            JSON.stringify(this.state.cards)\r\n          ),\r\n        0\r\n      );\r\n    }\r\n  };\r\n\r\n  cardNameInputFocused = cardIndex => {\r\n    this.defaultCardName = this.state.cards[\r\n      this.state.cards.findIndex(obj => obj.index === cardIndex)\r\n    ].name;\r\n  };\r\n\r\n  addCard = () => {\r\n    let cards = this.state.cards;\r\n    if (this.state.cardName === \"\") {\r\n      alert(\"Введите заголовок\");\r\n    } else {\r\n      cards.push({\r\n        index: this.state.cardsCount,\r\n        name: this.state.cardName,\r\n        comments: 0\r\n      });\r\n      this.setState({\r\n        cards: cards,\r\n        cardName: \"\",\r\n        isCardInputFocused: false,\r\n        cardsCount: this.state.cardsCount + 1\r\n      });\r\n      this.cardInput.current.value = \"\";\r\n      localStorage.setItem(\r\n        this.props.colName + \" Cards\",\r\n        JSON.stringify(this.state.cards)\r\n      );\r\n      setTimeout(\r\n        () =>\r\n          localStorage.setItem(\r\n            this.props.colName + \" count\",\r\n            this.state.cardsCount\r\n          ),\r\n        0\r\n      );\r\n    }\r\n    this.cards = this.state.cards;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className={classes.Column}>\r\n        <Col>\r\n          <Row>\r\n            <h5\r\n              md={4}\r\n              onClick={() => this.inputFocusHandler(this.headingInput)}\r\n              style={{\r\n                display: this.state.isHeadingInputFocused ? \"none\" : \"block\",\r\n                width: \"100%\",\r\n                marginTop: \"2px\",\r\n                overflowWrap: \"break-word\"\r\n              }}\r\n            >\r\n              {this.state.colName}\r\n            </h5>\r\n            <input\r\n              onChange={e => this.inputChangeHandler(e, this.headingInput)}\r\n              onBlur={() => this.inputBlurHandler(this.headingInput)}\r\n              onKeyPress={this.inputKeyHandler}\r\n              value={this.state.colName}\r\n              ref={this.headingInput}\r\n              style={{\r\n                position: this.state.isHeadingInputFocused\r\n                  ? \"static\"\r\n                  : \"absolute\",\r\n                top: \"3%\",\r\n                marginLeft: \"-1px\",\r\n                width: \"90%\",\r\n                border: \"1px solid #0079bf\",\r\n                fontSize: \"1.25rem\",\r\n                fontWeight: \"500\",\r\n                padding: \"1px 0\",\r\n                marginBottom: \"6px\",\r\n                lineHeight: \"1.2\",\r\n                zIndex: this.state.isHeadingInputFocused ? \"1\" : \"-1\"\r\n              }}\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <Container>\r\n              {this.state.cards.map((card, index) => {\r\n                return (\r\n                  <div key={index}>\r\n                    <Card\r\n                      index={card.index}\r\n                      username={this.state.username}\r\n                      cardNameValue={card.name}\r\n                      focused={() => this.cardNameInputFocused(card.index)}\r\n                      blurred={() => this.cardNameInputBlurred(card.index)}\r\n                      onDelete={() => this.onDelete(card.name)}\r\n                      cardName={card.name}\r\n                      comments={card.comments}\r\n                      colName={this.state.colName}\r\n                      cardNameChanged={e => this.cardNameChanged(e, card.index)}\r\n                    />\r\n                  </div>\r\n                );\r\n              })}\r\n            </Container>\r\n          </Row>\r\n          <Row>\r\n            <div>\r\n              <div\r\n                style={{\r\n                  position: this.state.isCardInputFocused\r\n                    ? \"static\"\r\n                    : \"absolute\",\r\n                  top: \"-3%\",\r\n                  marginBottom: \"15px\",\r\n                  zIndex: this.state.isCardInputFocused ? \"1\" : \"-1\"\r\n                }}\r\n              >\r\n                <input\r\n                  onChange={e => this.inputChangeHandler(e, this.cardInput)}\r\n                  onKeyPress={this.inputKeyHandler}\r\n                  placeholder=\"Введите заголовок\"\r\n                  ref={this.cardInput}\r\n                  style={{\r\n                    marginLeft: \"-1px\",\r\n                    width: \"90%\",\r\n                    border: \"1px solid #0079bf\",\r\n                    fontSize: \"16px\",\r\n                    padding: \"1px 0\",\r\n                    marginBottom: \"6px\",\r\n                    lineHeight: \"1.2\"\r\n                  }}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-success\"\r\n                  onClick={this.addCard}\r\n                  style={{ marginRight: \"20px\" }}\r\n                >\r\n                  Добавить\r\n                </button>\r\n                <button\r\n                  onClick={() => this.inputBlurHandler(this.cardInput)}\r\n                  type=\"button\"\r\n                  className=\"btn btn-secondary\"\r\n                >\r\n                  Отмена\r\n                </button>\r\n              </div>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => this.inputFocusHandler(this.cardInput)}\r\n                className=\"btn btn-outline-primary\"\r\n                style={{\r\n                  display: this.state.isCardInputFocused ? \"none\" : \"block\",\r\n                  marginBottom: \"15px\"\r\n                }}\r\n              >\r\n                Добавить карточку\r\n              </button>\r\n            </div>\r\n          </Row>\r\n        </Col>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Column;\r\n","import React from \"react\";\nimport Column from \"../column\";\n\nconst todo = props => {\n  return <Column colName=\"ToDo\" />;\n};\n\nexport default todo;\n","import React from \"react\";\nimport Column from \"../column\";\n\nconst inProgress = props => {\n  return <Column colName=\"InProgress\" />;\n};\n\nexport default inProgress;\n","import React from \"react\";\nimport Column from \"../column\";\n\nconst testing = props => {\n  return <Column colName=\"Testing\" />;\n};\n\nexport default testing;\n","import React from \"react\";\nimport Column from \"../column\";\n\nconst done = props => {\n  return <Column colName=\"Done\" />;\n};\n\nexport default done;\n","import React, { Component } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\n\nclass Login extends Component {\n  state = {\n    username: \"\"\n  };\n\n  usernameChanged = e => {\n    this.setState({ username: e.target.value });\n  };\n\n  onLogin = () => {\n    if (this.state.username === \"\") alert(\"Введите имя пользователя\");\n    else this.props.onHide(this.state.username);\n  };\n\n  render() {\n    return (\n      <Modal\n        {...this.props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header>\n          <Modal.Title id=\"contained-modal-title-vcenter\">Вход</Modal.Title>\n        </Modal.Header>\n        <Modal.Body style={{ display: \"flex\", alignItems: \"center\" }}>\n          <p style={{ margin: \"0\" }}>Имя пользователя: </p>\n          <input\n            placeholder=\"username\"\n            value={this.state.username}\n            onChange={this.usernameChanged}\n          ></input>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.onLogin}>Log-in</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport classes from \"./layout.module.css\";\r\nimport ToDo from \"../columns/ToDo/todo\";\r\nimport InProgress from \"../columns/inProgress/inProgress\";\r\nimport Testing from \"../columns/testing/testing\";\r\nimport Done from \"../columns/done/done\";\r\nimport Login from \"../login/login\";\r\n\r\nclass Layout extends Component {\r\n  state = {\r\n    username: \"\",\r\n    isLoginShow: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (\r\n      localStorage.getItem(\"username\") === \"\" ||\r\n      !localStorage.getItem(\"username\")\r\n    ) {\r\n      this.setState({ isLoginShow: true });\r\n    }\r\n  }\r\n\r\n  onHide = username => {\r\n    this.setState({ username: username, isLoginShow: false });\r\n    setTimeout(() => localStorage.setItem(\"username\", this.state.username), 0);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Container className={classes.Layout}>\r\n          <Row className={classes.Header}>\r\n            <Col md={12}>\r\n              <h1 className=\"text-center\">Trello</h1>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={6} sm={3} md={3}>\r\n              <ToDo />\r\n            </Col>\r\n            <Col xs={6} sm={3} md={3}>\r\n              <InProgress />\r\n            </Col>\r\n            <Col xs={6} sm={3} md={3}>\r\n              <Testing />\r\n            </Col>\r\n            <Col xs={6} sm={3} md={3}>\r\n              <Done />\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        <Login show={this.state.isLoginShow} onHide={this.onHide} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Layout;\r\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Layout from \"./components/layout/layout\";\nimport \"./App.css\";\n\nfunction App() {\n  return <Layout />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}