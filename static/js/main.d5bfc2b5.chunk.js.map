{"version":3,"sources":["components/comments/commentItem/commentItem.module.css","components/cards/cardItem/cardItem.module.css","containers/layout/layout.module.css","components/description/description.module.css","components/cards/addCard/addCard.module.css","components/column/column.module.css","components/caption/caption.module.css","components/comments/commentCreateForm/commentCreateForm.module.css","containers/cardModal/cardModal.module.css","components/login/login.module.css","reducers/columnsList.js","reducers/login.js","components/caption/caption.js","components/description/description.js","components/comments/commentCreateForm/commentCreateForm.js","components/comments/commentItem/commentItem.js","reducers/cards.js","reducers/comments.js","selectors/login.js","selectors/comments.js","containers/cardModal/cardModal.js","components/cards/cardItem/cardItem.js","components/cards/addCard/addCard.js","selectors/cards.js","containers/cardsList/cardsList.js","components/column/column.js","components/login/login.js","selectors/columns.js","containers/layout/layout.js","App.js","serviceWorker.js","reducers/index.js","store/configureStore.js","index.js"],"names":["module","exports","editColName","createAction","handleActions","state","action","payload","id","text","map","column","name","login","Caption","labelValue","props","captionName","isLabelShowed","onInputBlurred","changeInputName","setState","trim","inputKeyHandler","e","key","this","className","classes","autoFocus","onChange","target","value","onBlur","onKeyUp","md","onClick","Component","Description","isOpened","description","cardDesc","onDescSaved","DescriptionTextArea","Button","SaveButton","CommentCreateForm","isCommentFocus","commentText","onCommentSaved","AddComment","style","height","placeholder","onFocus","CommentItem","isCommentChanging","onCommentSave","onCommentChange","onCommentDelete","username","Comment","CommentText","CommentTextChange","defaultValue","CommentControl","addCard","editCardName","deleteCard","editCardDesc","colId","comments","card","filter","cardId","addComment","editComment","deleteComment","comment","getLogin","getCardComments","createSelector","_","connect","colName","dispatch","show","onHide","cardName","Modal","size","aria-labelledby","centered","Header","closeButton","Title","SubHeading","Body","uuidv4","index","Footer","Card","isModalShowed","onModalToggle","type","CardName","CardComments","src","alt","clicked","changeDesc","AddCard","isCardFormOpened","onCardAdded","alert","onCardFormClosed","AddCardControl","ButtonWrapper","getColumnCards","cards","commentsLength","length","cardNameValue","changeColumnName","Container","Column","Col","Row","Login","usernameChanged","onLogin","ModalBody","getColumns","columnsList","useSelector","useState","Boolean","isShowLogin","setIsShowLogin","Layout","xs","sm","App","window","location","hostname","match","rootReducer","combineReducers","persistConfig","storage","persistedReducer","persistReducer","reducer","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","loading","persistor","persistStore","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d5bfc2b5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Comment\":\"commentItem_Comment__1rxLZ\",\"CommentText\":\"commentItem_CommentText__UIyKI\",\"CommentTextChange\":\"commentItem_CommentTextChange__2YYL8\",\"CommentControl\":\"commentItem_CommentControl__2EQK3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"cardItem_Card__YOaxC\",\"CardName\":\"cardItem_CardName__2UIRF\",\"CardComments\":\"cardItem_CardComments__2fM2-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"layout_Layout__2A_Ds\",\"Header\":\"layout_Header__3QZq6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DescriptionTextArea\":\"description_DescriptionTextArea__11H08\",\"SaveButton\":\"description_SaveButton__dcLnU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddCardControl\":\"addCard_AddCardControl__hbDWH\",\"ButtonWrapper\":\"addCard_ButtonWrapper__3zw3-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Column\":\"column_Column__2HWaQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Caption\":\"caption_Caption__10JVT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddComment\":\"commentCreateForm_AddComment__XqS7s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SubHeading\":\"cardModal_SubHeading__3ehIg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalBody\":\"login_ModalBody__1Ouss\"};","import { handleActions, createAction } from \"redux-actions\";\n\nexport const editColName = createAction(\"EDIT_COL_NAME\");\n\nconst initialState = [\n  { id: 0, name: \"ToDo\" },\n  { id: 1, name: \"InProgress\" },\n  { id: 2, name: \"Testing\" },\n  { id: 3, name: \"Done\" }\n];\n\nexport default handleActions(\n  {\n    [editColName](state, action) {\n      const { id, text } = action.payload;\n\n      return state.map(column =>\n        column.id === id ? { ...column, name: text } : column\n      );\n    }\n  },\n  initialState\n);\n","import { handleActions, createAction } from \"redux-actions\";\n\nconst initialState = \"\";\n\nexport const login = createAction(\"LOGIN\");\n\nexport default handleActions(\n  {\n    [login](state, action) {\n      return action.payload.text;\n    }\n  },\n  initialState\n);\n","import React, { Component } from \"react\";\nimport classes from \"./caption.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass Caption extends Component {\n  state = {\n    labelValue: this.props.captionName,\n    isLabelShowed: false\n  };\n\n  onInputBlurred = () => {\n    const { labelValue } = this.state;\n    const { captionName, changeInputName } = this.props;\n\n    this.setState({ isLabelShowed: false });\n    if (!labelValue.trim()) {\n      this.setState({ labelValue: captionName });\n      return;\n    }\n\n    changeInputName(labelValue);\n  };\n\n  inputKeyHandler = e => {\n    if (e.key === \"Enter\" || e.key === \"Escape\") {\n      this.setState({ isLabelShowed: false });\n      this.onInputBlurred();\n    }\n  };\n\n  render() {\n    const { isLabelShowed, labelValue } = this.state;\n\n    return (\n      <div className={classes.Caption}>\n        {isLabelShowed ? (\n          <input\n            autoFocus\n            onChange={e => this.setState({ labelValue: e.target.value })}\n            onBlur={this.onInputBlurred}\n            onKeyUp={this.inputKeyHandler}\n            value={labelValue}\n          />\n        ) : (\n          <h5 md={4} onClick={() => this.setState({ isLabelShowed: true })}>\n            {labelValue}\n          </h5>\n        )}\n      </div>\n    );\n  }\n}\n\nCaption.propTypes = {\n  captionName: PropTypes.string.isRequired,\n  changeInputName: PropTypes.func.isRequired\n};\n\nexport default Caption;\n","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport classes from \"./description.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass Description extends Component {\n  state = {\n    isOpened: false,\n    description: this.props.cardDesc\n  };\n\n  onDescSaved = value => {\n    this.setState({ isOpened: false }, () => this.props.onDescSaved(value));\n  };\n\n  render() {\n    const { isOpened, description } = this.state;\n\n    return (\n      <>\n        <b>Описание</b>\n        {isOpened ? (\n          <div>\n            <textarea\n              autoFocus\n              onChange={e => this.setState({ description: e.target.value })}\n              value={description}\n              className={classes.DescriptionTextArea}\n            />\n            <Button\n              className={classes.SaveButton}\n              onClick={() => this.onDescSaved(description)}\n            >\n              Сохранить\n            </Button>\n            <Button\n              className=\"btn btn-secondary\"\n              onClick={() =>\n                this.setState({\n                  isOpened: false,\n                  description: this.props.cardDesc\n                })\n              }\n            >\n              Отменить\n            </Button>\n          </div>\n        ) : (\n          <p onClick={() => this.setState({ isOpened: true })}>\n            {description.trim() || \"Введите описание\"}\n          </p>\n        )}\n      </>\n    );\n  }\n}\n\nDescription.propTypes = {\n  cardDesc: PropTypes.string,\n  onDescSaved: PropTypes.func.isRequired\n};\n\nexport default Description;\n","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport classes from \"./commentCreateForm.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass CommentCreateForm extends Component {\n  state = {\n    isCommentFocus: false,\n    commentText: \"\"\n  };\n\n  onCommentSaved = e => {\n    if (!this.state.commentText.trim()) return;\n    this.props.onCommentSaved(this.state.commentText);\n    this.setState({ isCommentFocus: false, commentText: \"\" });\n  };\n\n  render() {\n    const { isCommentFocus, commentText } = this.state;\n\n    return (\n      <>\n        <b>Комментарии</b>\n        <div\n          className={classes.AddComment}\n          style={{ height: isCommentFocus ? \"150px\" : \"50px\" }}\n          onChange={e =>\n            e.target.value\n              ? this.setState({ isCommentFocus: true })\n              : this.setState({ isCommentFocus: false })\n          }\n        >\n          <textarea\n            placeholder=\"Напишите комментарий...\"\n            value={commentText}\n            onChange={e => this.setState({ commentText: e.target.value })}\n          />\n          {isCommentFocus && (\n            <Button\n              className=\"btn btn-success\"\n              onClick={this.onCommentSaved}\n              onFocus={() => this.setState({ isCommentFocus: true })}\n            >\n              Сохранить\n            </Button>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nCommentCreateForm.propTypes = {\n  onCommentSaved: PropTypes.func.isRequired\n};\n\nexport default CommentCreateForm;\n","import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport classes from \"./commentItem.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass CommentItem extends Component {\n  state = {\n    isCommentChanging: false,\n    commentText: this.props.commentText\n  };\n\n  onCommentSave = () => {\n    this.setState({ isCommentChanging: false }, () =>\n      this.props.onCommentChange(this.state.commentText)\n    );\n  };\n\n  onCommentChange = e => {\n    this.setState({ isCommentChanging: true, commentText: e.target.value });\n  };\n\n  render() {\n    const { onCommentDelete, username, commentText } = this.props;\n\n    const { isCommentChanging } = this.state;\n\n    return (\n      <div className={classes.Comment}>\n        <b>{username}</b>\n        <div className={classes.CommentText}>\n          {isCommentChanging ? (\n            <>\n              <div className={classes.CommentTextChange}>\n                <textarea\n                  autoFocus\n                  defaultValue={commentText}\n                  onChange={this.onCommentChange}\n                />\n              </div>\n              <Button className=\"btn btn-success\" onClick={this.onCommentSave}>\n                Сохранить\n              </Button>\n            </>\n          ) : (\n            <p>{commentText}</p>\n          )}\n        </div>\n        <div className={classes.CommentControl}>\n          <p onClick={this.onCommentChange}>Изменить</p>\n          <p onClick={onCommentDelete}>Удалить</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nCommentItem.propTypes = {\n  onCommentDelete: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  commentText: PropTypes.string\n};\n\nexport default CommentItem;\n","import { handleActions, createAction } from \"redux-actions\";\n\nconst initialState = [];\n\nexport const addCard = createAction(\"ADD_CARD\");\nexport const editCardName = createAction(\"EDIT_CARD_NAME\");\nexport const deleteCard = createAction(\"DELETE_CARD\");\nexport const editCardDesc = createAction(\"EDIT_CARD_DESC\");\n\nexport default handleActions(\n  {\n    [addCard](state, action) {\n      const { id, colId, text } = action.payload;\n\n      return [\n        ...state,\n        {\n          id,\n          colId,\n          name: text,\n          comments: 0,\n          cardDesc: \"\"\n        }\n      ];\n    },\n    [editCardName](state, action) {\n      const { id, text } = action.payload;\n\n      return state.map(card =>\n        card.id === id ? { ...card, name: text } : card\n      );\n    },\n    [deleteCard](state, action) {\n      return state.filter(card => card.id !== action.payload.id);\n    },\n    [editCardDesc](state, action) {\n      const { cardId, text } = action.payload;\n\n      return state.map(card =>\n        card.id === cardId ? { ...card, cardDesc: text } : card\n      );\n    }\n  },\n  initialState\n);\n","import { handleActions, createAction } from \"redux-actions\";\n\nconst initialState = [];\n\nexport const addComment = createAction(\"ADD_COMMENT\");\nexport const editComment = createAction(\"EDIT_COMMENT\");\nexport const deleteComment = createAction(\"DELETE_COMMENT\");\n\nexport default handleActions(\n  {\n    [addComment](state, action) {\n      const { id, cardId, text } = action.payload;\n\n      return [\n        ...state,\n        {\n          id,\n          cardId,\n          value: text\n        }\n      ];\n    },\n    [editComment](state, action) {\n      const { id, text } = action.payload;\n\n      return state.map(comment =>\n        comment.id === id ? { ...comment, value: text } : comment\n      );\n    },\n    [deleteComment](state, action) {\n      return state.filter(comment => comment.id !== action.payload.id);\n    }\n  },\n  initialState\n);\n","export const getLogin = state => state.login;\n","import { createSelector } from \"reselect\";\n\nconst getComments = state => state.comments;\n\nexport const getCardComments = createSelector(\n  getComments,\n  (_, cardId) => cardId,\n  (comments, cardId) => comments.filter(comment => comment.cardId === cardId)\n);\n","import React from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport Caption from \"../../components/caption/caption\";\nimport Description from \"../../components/description/description\";\nimport CommentCreateForm from \"../../components/comments/commentCreateForm/commentCreateForm\";\nimport CommentItem from \"../../components/comments/commentItem/commentItem\";\nimport { deleteCard, editCardName, editCardDesc } from \"../../reducers/cards\";\nimport {\n  addComment,\n  editComment,\n  deleteComment\n} from \"../../reducers/comments\";\nimport { connect } from \"react-redux\";\nimport classes from \"./cardModal.module.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { getLogin } from \"../../selectors/login\";\nimport { getCardComments } from \"../../selectors/comments\";\nimport PropTypes from \"prop-types\";\n\nconst modal = props => {\n  const {\n    colName,\n    dispatch,\n    cardId,\n    comments,\n    show,\n    onHide,\n    cardName,\n    cardDesc,\n    username\n  } = props;\n\n  const onDelete = () => {\n    const { onHide } = props;\n\n    dispatch(deleteCard({ id: cardId }));\n    onHide();\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          <Caption\n            captionName={cardName}\n            changeInputName={text =>\n              dispatch(editCardName({ text: text, id: cardId }))\n            }\n          />\n          <p className={classes.SubHeading}>в колонке {colName}</p>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Description\n          cardDesc={cardDesc}\n          onDescSaved={text =>\n            dispatch(editCardDesc({ cardId: cardId, text: text }))\n          }\n        />\n      </Modal.Body>\n      <Modal.Body>\n        <CommentCreateForm\n          onCommentSaved={text =>\n            dispatch(addComment({ id: uuidv4(), cardId: cardId, text: text }))\n          }\n        />\n        {comments.map((comment, index) => {\n          const { id, value } = comment;\n\n          return (\n            <CommentItem\n              key={index}\n              username={username}\n              onCommentChange={text =>\n                dispatch(editComment({ id: id, text: text }))\n              }\n              commentText={value}\n              onCommentDelete={() => dispatch(deleteComment({ id: id }))}\n            />\n          );\n        })}\n      </Modal.Body>\n      <Modal.Footer>\n        <Button className=\"btn btn-danger\" onClick={onDelete}>\n          Удалить\n        </Button>\n        <Button onClick={onHide}>Закрыть</Button>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nmodal.propTypes = {\n  colName: PropTypes.string.isRequired,\n  cardName: PropTypes.string.isRequired,\n  cardDesc: PropTypes.string,\n  dispatch: PropTypes.func.isRequired,\n  cardId: PropTypes.string.isRequired,\n  comments: PropTypes.array,\n  show: PropTypes.bool.isRequired,\n  onHide: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired\n};\n\nfunction mapStateToProps(state, props) {\n  return {\n    comments: getCardComments(state, props.cardId),\n    username: getLogin(state)\n  };\n}\n\nexport default connect(mapStateToProps)(modal);\n","import React, { Component } from \"react\";\nimport Modal from \"../../../containers/cardModal/cardModal\";\nimport classes from \"./cardItem.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass Card extends Component {\n  state = {\n    isModalShowed: false\n  };\n\n  onModalToggle = () =>\n    this.setState({ isModalShowed: !this.state.isModalShowed });\n\n  render() {\n    const { colName, cardId, cardName, cardDesc, comments } = this.props;\n    const { isModalShowed } = this.state;\n\n    return (\n      <>\n        <div\n          className={classes.Card}\n          onClick={this.onModalToggle}\n          type=\"button\"\n        >\n          <div className={classes.CardName}>\n            <p>{cardName}</p>\n          </div>\n          <div className={classes.CardComments}>\n            <img\n              src=\"https://image.flaticon.com/icons/svg/1946/1946412.svg\"\n              alt=\"\"\n            />\n            <p>{comments}</p>\n          </div>\n        </div>\n        <Modal\n          cardDesc={cardDesc}\n          cardId={cardId}\n          clicked={this.changeDesc}\n          show={isModalShowed}\n          onHide={this.onModalToggle}\n          cardName={cardName}\n          colName={colName}\n        />\n      </>\n    );\n  }\n}\n\nCard.propTypes = {\n  colName: PropTypes.string.isRequired,\n  cardId: PropTypes.string.isRequired,\n  cardName: PropTypes.string.isRequired,\n  cardDesc: PropTypes.string,\n  comments: PropTypes.number.isRequired\n};\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport classes from \"./addCard.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass AddCard extends Component {\n  state = {\n    cardName: \"\",\n    isCardFormOpened: false\n  };\n\n  onCardAdded = () => {\n    if (this.state.cardName.trim()) {\n      this.props.onCardAdded(this.state.cardName);\n      this.onCardFormClosed();\n    } else return alert(\"Введите имя карточки\");\n  };\n\n  onCardFormClosed = () =>\n    this.setState({ cardName: \"\", isCardFormOpened: false });\n\n  inputKeyHandler = e => {\n    if (e.key === \"Enter\") this.onCardAdded();\n    if (e.key === \"Escape\") this.onCardFormClosed();\n  };\n\n  render() {\n    const { isCardFormOpened, cardName } = this.state;\n\n    return (\n      <>\n        {isCardFormOpened ? (\n          <div className={classes.AddCardControl}>\n            <input\n              autoFocus\n              onChange={e => this.setState({ cardName: e.target.value })}\n              value={cardName}\n              onKeyUp={this.inputKeyHandler}\n              placeholder=\"Введите заголовок\"\n            />\n            <button\n              type=\"button\"\n              className=\"btn btn-success\"\n              onClick={this.onCardAdded}\n            >\n              Добавить\n            </button>\n            <button\n              onClick={this.onCardFormClosed}\n              type=\"button\"\n              className=\"btn btn-secondary\"\n            >\n              Отмена\n            </button>\n          </div>\n        ) : (\n          <div className={classes.ButtonWrapper}>\n            <button\n              type=\"button\"\n              onClick={() => this.setState({ isCardFormOpened: true })}\n              className=\"btn btn-outline-primary\"\n            >\n              Добавить карточку\n            </button>\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nAddCard.propTypes = {\n  onCardAdded: PropTypes.func.isRequired\n};\n\nexport default AddCard;\n","import { createSelector } from \"reselect\";\n\nconst getCards = state => state.cards;\nconst getComments = state => state.comments;\n\nexport const getColumnCards = createSelector(\n  getCards,\n  getComments,\n  (_, colId) => colId,\n  (cards, comments, colId) => {\n    const columnCards = cards.filter(card => card.colId === colId);\n    return columnCards.map(card => {\n      const cardComments = comments.filter(\n        comment => comment.cardId === card.id\n      );\n      const commentsLength = cardComments.length;\n\n      return { ...card, commentsLength };\n    });\n  }\n);\n","import React from \"react\";\nimport CardItem from \"../../components/cards/cardItem/cardItem\";\nimport AddCard from \"../../components/cards/addCard/addCard\";\nimport { addCard } from \"../../reducers/cards\";\nimport { connect } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { getColumnCards } from \"../../selectors/cards\";\nimport PropTypes from \"prop-types\";\n\nconst cardsList = props => {\n  const { colName, dispatch, colId, cards } = props;\n\n  return (\n    <>\n      {cards.map((card, index) => {\n        const { name, id, cardDesc } = card;\n\n        return (\n          <div key={id}>\n            <CardItem\n              index={id}\n              cardId={id}\n              comments={cards[index].commentsLength}\n              cardNameValue={name}\n              cardName={name}\n              colName={colName}\n              cardDesc={cardDesc}\n            />\n          </div>\n        );\n      })}\n      <AddCard\n        colName={colName}\n        onCardAdded={text =>\n          dispatch(addCard({ id: uuidv4(), colId: colId, text: text }))\n        }\n      />\n    </>\n  );\n};\n\ncardsList.propTypes = {\n  colName: PropTypes.string.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  colId: PropTypes.number.isRequired,\n  cards: PropTypes.array.isRequired\n};\n\nfunction mapStateToProps(state, props) {\n  return {\n    cards: getColumnCards(state, props.colId)\n  };\n}\n\nexport default connect(mapStateToProps)(cardsList);\n","import React from \"react\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport classes from \"./column.module.css\";\r\nimport CardsList from \"../../containers/cardsList/cardsList\";\r\nimport Caption from \"../caption/caption\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst column = props => {\r\n  const { colName, colId, changeColumnName } = props;\r\n\r\n  return (\r\n    <Container className={classes.Column}>\r\n      <Col>\r\n        <Row>\r\n          <Caption captionName={colName} changeInputName={changeColumnName} />\r\n        </Row>\r\n        <Row>\r\n          <Container>\r\n            <CardsList colName={colName} colId={colId} />\r\n          </Container>\r\n        </Row>\r\n      </Col>\r\n    </Container>\r\n  );\r\n};\r\n\r\ncolumn.propTypes = {\r\n  colName: PropTypes.string.isRequired,\r\n  colId: PropTypes.number.isRequired,\r\n  changeColumnName: PropTypes.func.isRequired\r\n};\r\n\r\nexport default column;\r\n","import React, { Component } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport classes from \"./login.module.css\";\nimport PropTypes from \"prop-types\";\n\nclass Login extends Component {\n  state = {\n    username: \"\"\n  };\n\n  usernameChanged = e => {\n    this.setState({ username: e.target.value });\n  };\n\n  onLogin = () => {\n    const { username } = this.state;\n\n    if (!username) alert(\"Введите имя пользователя\");\n    else this.props.onHide(username);\n  };\n\n  render() {\n    return (\n      <Modal\n        {...this.props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header>\n          <Modal.Title id=\"contained-modal-title-vcenter\">Вход</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className={classes.ModalBody}>\n          <p>Имя пользователя: </p>\n          <input\n            placeholder=\"username\"\n            value={this.state.username}\n            onChange={this.usernameChanged}\n          ></input>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.onLogin}>Войти</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n\nLogin.propTypes = {\n  onHide: PropTypes.func.isRequired\n};\n\nexport default Login;\n","export const getColumns = state => state.columnsList;\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { editColName } from \"../../reducers/columnsList\";\r\nimport { login } from \"../../reducers/login\";\r\nimport classes from \"./layout.module.css\";\r\nimport Column from \"../../components/column/column\";\r\nimport Login from \"../../components/login/login\";\r\nimport { getLogin } from \"../../selectors/login\";\r\nimport { getColumns } from \"../../selectors/columns\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Layout(props) {\r\n  const { dispatch } = props;\r\n\r\n  const columnsList = useSelector(getColumns);\r\n  const username = useSelector(getLogin);\r\n\r\n  const [isShowLogin, setIsShowLogin] = useState(!Boolean(username));\r\n\r\n  const onHide = username => {\r\n    dispatch(login({ text: username }));\r\n    setIsShowLogin(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container className={classes.Layout}>\r\n        <Row className={classes.Header}>\r\n          <Col md={12}>\r\n            <h1 className=\"text-center\">Trello</h1>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {columnsList.map(column => {\r\n            return (\r\n              <Col xs={6} sm={3} md={3} key={column.id}>\r\n                <Column\r\n                  colName={column.name}\r\n                  colId={column.id}\r\n                  changeColumnName={value =>\r\n                    dispatch(editColName({ id: column.id, text: value }))\r\n                  }\r\n                />\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Container>\r\n      <Login show={isShowLogin} onHide={onHide} />\r\n    </>\r\n  );\r\n}\r\n\r\nLayout.propTypes = {\r\n  dispatch: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(null, null)(Layout);\r\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Layout from \"./containers/layout/layout\";\nimport \"./App.css\";\n\nfunction App() {\n  return <Layout />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import cards from \"./cards\";\nimport columnsList from \"./columnsList\";\nimport comments from \"./comments\";\nimport login from \"./login\";\nimport { combineReducers } from \"redux\";\n\nconst rootReducer = combineReducers({\n  cards,\n  columnsList,\n  comments,\n  login\n});\n\nexport default rootReducer;\n","import { createStore } from \"redux\";\nimport reducer from \"../reducers\";\nimport { persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, reducer);\n\nexport const store = createStore(\n  persistedReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { persistStore } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store } from \"./store/configureStore\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistStore(store)}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}